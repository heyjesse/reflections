These are my relfections from lesson 1.  

So far I learned how to do an alias and how to call up textwrangler from a command line.

I also learned how to use the diff command in linux.

How did viewing a diff between two versions of a file help you see the bug that
was introduced?

   It was OK.  My editor does a much better job of this.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Make it so you can find when and where bugs were added.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

   This is coding, not writing text on Google so the coder knows when things are good.
   The text writer does too but having versions in between isn't damaging for docs
   whereas having unfinished code in git can make for some ugly stuff happening 
   at build time.
   
Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Different purposes, GIT is designed for developers where you will often have to 
    make changes across multiple files to create a function whereas google docs
    is aimed people writing documents.

How can you use the commands git log and git diff to view the history of files?

    Git Log to tell me when certain changes were made and git diff to find out exact
    where those changes were made and what they were.

How might using version control make you more confident to make changes that
could break something?

   Well you can always revert easily with version control to undo the changes made.  
   
Now that you have your workspace set up, what do you want to try using Git for?

  Managing development of a project I'm working on.