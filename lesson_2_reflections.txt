
What happens when you initialize a repository? Why do you need to do it?

git init starts tracking what I'm doing.  It sets up the hidden file structures I need.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

Staging area can be used to get things ready for commit whereas a working area is where you are 
trying out each little interation and the repository is where you save the stuff you 
think works.

How can you use the staging area to make sure you have one commit per logical
change?

move things over to the staging area.  Get it all set, do some last minute comparisons
to make sure it is all good and then you can commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

Well if I try adding a new feature I'm uncertain will work or if I'm experimenting with a 
new style of coding or new libraries that I'm not sure will work.

How do the diagrams help you visualize the branch structure?

The make it so you can follow along with all the commits and work being done.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?